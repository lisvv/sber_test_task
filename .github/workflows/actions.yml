name: Django CI

on:
  push:
    branches: [ main ]


jobs:

  build_and_push_prod_to_yandex_registry:
    if: github.ref == 'refs/heads/main'
    needs: [test]
    uses: students-diary/students-diary-workflow-actions/.github/workflows/build-and-push-diary.yaml@master
    secrets:
      registry_username: ${{ secrets.REGISTRY_USERNAME }}
      registry_password: ${{ secrets.REGISTRY_PASSWORD }}
      registry_tag: cr.yandex/${{ secrets.REGISTRY_ID }}/sber_test_task:${{ github.run_id }}
      github_sha: ${{ github.sha }}
      job_id: ${{ github.run_id }}

  test:

    runs-on: ubuntu-latest
    env:
      ENV: DEV
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]
        include:
          - db: postgres

    services:
      postgres:
        image: postgres:12.4
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Git fetch
      run: |
        git fetch origin
    - name: Run Autoflake
      run: |
        ./lint autoflake --check
    - name: Run iSort
      run: |
        ./lint isort --check-only --diff
    - name: Run Black
      run: |
        ./lint black --check --diff
    - name: Run Tests
      run: |
        cd backend
        python3 -m pytest
