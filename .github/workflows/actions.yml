name: Django CI

on:
  push:
    branches: [ main ]

jobs:

  build_and_push_to_yandex_registry:
    name: Pass input and secrets to my-action
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [test]

    steps:

      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: cr.yandex
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          file: Dockerfile
          tags: cr.yandex/${{ secrets.REGISTRY_ID }}/student-diary-backend-preprod:${{ github.run_id }}
          build-args: |
            GITHUB_SHA=${{ github.sha }}
            JOB_ID=${{ github.run_id }}

  test:

    runs-on: ubuntu-latest
    env:
      ENV: DEV
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.9","3.10"]
        include:
          - db: postgres

    services:
      postgres:
        image: postgres:12.4
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Git fetch
      run: |
        git fetch origin
    - name: Run Tests
      run: |
        poetry run pytest
